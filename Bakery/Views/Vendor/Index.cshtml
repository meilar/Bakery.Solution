@{
  Layout = "_Layout";
}
@using Bakery.Models;
<div class="container">
  @await Html.PartialAsync("_Navbar")
  <div id="vendor-jumbo" class="jumbotron jumbotron-fluid">
    <div class="container">
      <h1 class="display-4">All Vendors</h1>      
    </div>
  </div>
  @if (@Model.Count == 0)
      {
        <div id="no-vendor" class="text-center">
          <p class="lead">There are no vendors to display.</p>
          <a href="/Vendors/new" class="btn btn-primary">Add a new Vendor</a>
        </div>
      }
  <div class="card-columns mx-auto d-flex justify-content-center col-8">
  @foreach (Vendor vendor in Model)
  { 

    <div id='vendor-card-@vendor.Id' class="card mx-auto">
      <div class="card-body vendor-card">
        <h5 class="card-title">@vendor.Name ID#@vendor.Id</h5>
        <h6 class="card-subtitle mb-2 text-muted">@vendor.Address</h6>
        <p class="card-text">@vendor.Notes</p>
        @if (vendor.Balance == 0)
        {
          <p class="text-primary">This vendor has no outstanding balances.</p>
        }
        else
        {
          <p class="text-danger">Outstanding balance: $@vendor.Balance.00</p>
        }
        <a href="/Vendors/@vendor.Id" class="card-link">Orders</a>
        <a href="#" class="card-link">Add new order</a>
        <a href="#" class="card-link text-danger">Delete Vendor</a>
      </div>
    </div>
  }
  </div>
  @await Html.PartialAsync("_Footer")
</div>